/*
 * Copyright 2014-2015 Dario Manesku. All rights reserved.
 * License: http://www.opensource.org/licenses/BSD-2-Clause
 */

#include "shader.shdr"

#ifndef CameraPos
    #define CameraPos u_camPos
#endif

void main()
{
    gl_Position = mul(u_modelViewProj, vec4(a_position, 1.0) );

    vec4 normal = a_normal * 2.0 - 1.0;
    vec3 viewNormal = normalize(mul(u_model[0], vec4(normal.xyz,  0.0)).xyz);

    v_normal = viewNormal;
    v_view = normalize(CameraPos - mul(u_model[0], vec4(a_position, 1.0)).xyz);

    v_texcoord0 = a_texcoord0;

#ifdef NORMAL_MAP
    vec4 tangent = a_tangent * 2.0 - 1.0;
    vec3 viewTangent = normalize(mul(u_model[0], vec4(tangent.xyz, 0.0)).xyz);

    vec3 viewBitangent = cross(viewNormal, viewTangent) * tangent.w;

    v_tangent = viewTangent;
    v_bitangent = viewBitangent;
#endif
}

/* vim: set sw=4 ts=4 expandtab: */
